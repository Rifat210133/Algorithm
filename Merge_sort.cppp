
//merge sort

#include<iostream>
#include<vector>
using namespace std;

void merge(vector<int>&arr, int l, int r,int mid){
	int l_sz = mid-l+1;
	int r_sz = r-mid;
	int L[l_sz],R[r_sz];
	for(int i=0; i<l_sz; i++){
		L[i]=arr[i+l];
	}
	for(int i=0; i<r_sz; i++){
		R[i]=arr[i+mid+1];
	}
	int i=0, j=0, k=l;
	while(i<l_sz and j<r_sz){
		if(L[i]<=R[j]){
			arr[k]=L[i];
			i++;
		}
		else{
			arr[k]=R[j];
			j++;
		}
		k++;
	}
	while(i<l_sz){
			arr[k]=L[i];
			i++;
			k++;
	}
	while(j<r_sz){
			arr[k]=R[j];
			j++;
			k++;
	}
}

void mergesort(vector<int>&arr, int l, int r){
			if(l>=r) return;
			int mid=l+(r-l)/2;
			mergesort(arr, l, mid);
			mergesort(arr, mid+1, r);
			merge(arr, l,r,mid);
}
void print_vector(vector<int>&arr){
			for(int i=0; i<arr.size(); i++){
				cout<<arr[i]<<" ";
			}
			cout<<endl;
}

void solve(){
			int n;
			cin>>n;
			vector<int>arr(n);
			for(int i=0; i<n; i++){
				cin>>arr[i];
			}
			cout<<"Given vector"<<endl;
			print_vector(arr);
			cout<<"sorted vector"<<endl;
			mergesort(arr, 0, n-1);
			print_vector(arr);
}
			
			


int main(){
	int t=1;
	while(t--){
		solve();
	}
}
